# Generated by Django 5.2.3 on 2025-06-21 07:30

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Call',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(help_text="Caller's phone number", max_length=20)),
                ('twilio_call_sid', models.CharField(help_text='Twilio Call SID', max_length=100, unique=True)),
                ('status', models.CharField(choices=[('incoming', 'Incoming'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('disconnected', 'Disconnected'), ('failed', 'Failed')], default='incoming', max_length=20)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, help_text='Call duration', null=True)),
                ('audio_file_url', models.URLField(blank=True, help_text='URL to recorded audio', null=True)),
                ('transcription', models.TextField(blank=True, help_text='Call transcription', null=True)),
                ('caller_city', models.CharField(blank=True, max_length=100, null=True)),
                ('caller_state', models.CharField(blank=True, max_length=100, null=True)),
                ('caller_country', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Call',
                'verbose_name_plural': 'Calls',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='CallNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('note', models.TextField()),
                ('is_urgent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('call', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='calls.call')),
            ],
            options={
                'verbose_name': 'Call Note',
                'verbose_name_plural': 'Call Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contact_type', models.CharField(help_text='Type of emergency contact', max_length=50)),
                ('contact_info', models.CharField(help_text='Contact information', max_length=200)),
                ('notes', models.TextField(blank=True, null=True)),
                ('contacted', models.BooleanField(default=False)),
                ('contact_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('call', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_contacts', to='calls.call')),
            ],
            options={
                'verbose_name': 'Emergency Contact',
                'verbose_name_plural': 'Emergency Contacts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('moderate', 'Moderate Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('risk_factors', models.JSONField(default=list, help_text='List of identified risk factors')),
                ('protective_factors', models.JSONField(default=list, help_text='List of identified protective factors')),
                ('primary_emotion', models.CharField(blank=True, choices=[('sad', 'Sad'), ('angry', 'Angry'), ('anxious', 'Anxious'), ('depressed', 'Depressed'), ('hopeless', 'Hopeless'), ('confused', 'Confused'), ('calm', 'Calm'), ('neutral', 'Neutral'), ('grateful', 'Grateful'), ('other', 'Other')], max_length=20, null=True)),
                ('emotion_intensity', models.IntegerField(blank=True, help_text='Emotion intensity on a scale of 1-10', null=True)),
                ('emotions_detected', models.JSONField(default=list, help_text='Multiple emotions detected')),
                ('conversation_summary', models.TextField(help_text='Summary of the conversation')),
                ('key_topics', models.JSONField(default=list, help_text='Key topics discussed')),
                ('intervention_techniques_used', models.JSONField(default=list, help_text='Techniques used by the AI')),
                ('chat_messages', models.JSONField(default=list, help_text='Chat messages exchange')),
                ('mental_health_concerns', models.TextField(blank=True, null=True)),
                ('immediate_safety_plan', models.TextField(blank=True, null=True)),
                ('follow_up_needed', models.BooleanField(default=False)),
                ('follow_up_notes', models.TextField(blank=True, null=True)),
                ('resources_provided', models.JSONField(default=list, help_text='Resources shared with caller')),
                ('referrals_made', models.JSONField(default=list, help_text='Referrals to other services')),
                ('confidence_score', models.FloatField(blank=True, help_text='AI confidence score for the assessment (0.0-1.0)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('call', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memories', to='calls.call')),
            ],
            options={
                'verbose_name': 'Memory',
                'verbose_name_plural': 'Memories',
                'ordering': ['-created_at'],
            },
        ),
    ]
